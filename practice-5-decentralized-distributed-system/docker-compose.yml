services:
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dfs-app1
    restart: on-failure
    ports:
      - "8080:8080"
    environment:
      - NAME_APP=app1
    volumes:
      - shared-files:/upload-files
    networks:
      - dfs-network
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dfs-app2
    restart: on-failure
    environment:
      - NAME_APP=app2
    volumes:
      - shared-files:/upload-files
    networks:
      - dfs-network
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  app3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dfs-app3
    restart: on-failure
    environment:
      - NAME_APP=app3
    volumes:
      - shared-files:/upload-files
    networks:
      - dfs-network
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  app4:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dfs-app4
    restart: on-failure
    environment:
      - NAME_APP=app4
    volumes:
      - shared-files:/upload-files
    networks:
      - dfs-network
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:1.27-alpine
    container_name: dfs-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      app1:
        condition: service_healthy
      app2:
        condition: service_healthy
      app3:
        condition: service_healthy
      app4:
        condition: service_healthy

volumes:
  shared-files:
    driver: local

networks:
  dfs-network:
    driver: bridge
